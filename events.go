// Code generated by go generate; DO NOT EDIT.
// 2019-01-27 23:08:03.583425106 -0500 EST m=+0.007862972
package mpv

import ()

func handleEvent(ev string) {
	go func() {
		switch ev { 
		case "start-file":
			StartFile <- struct{}{}
		case "end-file":
			EndFile <- struct{}{}
		case "file-loaded":
			FileLoaded <- struct{}{}
		case "seek":
			Seek <- struct{}{}
		case "playback-restart":
			PlaybackRestart <- struct{}{}
		case "idle":
			Idle <- struct{}{}
		case "tick":
			Tick <- struct{}{}
		case "shutdown":
			Shutdown <- struct{}{}
		case "log-message":
			LogMessage <- struct{}{}
		case "get-property-reply":
			GetPropertyReply <- struct{}{}
		case "set-property-reply":
			SetPropertyReply <- struct{}{}
		case "command-reply":
			CommandReply <- struct{}{}
		case "client-message":
			ClientMessage <- struct{}{}
		case "video-reconfig":
			VideoReconfig <- struct{}{}
		case "audio-reconfig":
			AudioReconfig <- struct{}{}
		default:
			Log("mpv.handleEvent: unknown event name: %s", ev)
		}
	}()
}

// StartFile is the channel for the 'start-file' event
var StartFile = make(chan struct{}, 1)

// EndFile is the channel for the 'end-file' event
var EndFile = make(chan struct{}, 1)

// FileLoaded is the channel for the 'file-loaded' event
var FileLoaded = make(chan struct{}, 1)

// Seek is the channel for the 'seek' event
var Seek = make(chan struct{}, 1)

// PlaybackRestart is the channel for the 'playback-restart' event
var PlaybackRestart = make(chan struct{}, 1)

// Idle is the channel for the 'idle' event
var Idle = make(chan struct{}, 1)

// Tick is the channel for the 'tick' event
var Tick = make(chan struct{}, 1)

// Shutdown is the channel for the 'shutdown' event
var Shutdown = make(chan struct{}, 1)

// LogMessage is the channel for the 'log-message' event
var LogMessage = make(chan struct{}, 1)

// GetPropertyReply is the channel for the 'get-property-reply' event
var GetPropertyReply = make(chan struct{}, 1)

// SetPropertyReply is the channel for the 'set-property-reply' event
var SetPropertyReply = make(chan struct{}, 1)

// CommandReply is the channel for the 'command-reply' event
var CommandReply = make(chan struct{}, 1)

// ClientMessage is the channel for the 'client-message' event
var ClientMessage = make(chan struct{}, 1)

// VideoReconfig is the channel for the 'video-reconfig' event
var VideoReconfig = make(chan struct{}, 1)

// AudioReconfig is the channel for the 'audio-reconfig' event
var AudioReconfig = make(chan struct{}, 1)

