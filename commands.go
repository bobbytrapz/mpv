// Code generated by go generate; DO NOT EDIT.
// 2019-01-27 23:08:03.583769765 -0500 EST m=+0.008207642
package mpv

import (
	"fmt"
)

// SendCommand using Execute then wait for a reply
func (c *Client) SendCommand(name string, args ...interface{}) error {
	ch, err := c.Execute(name, args...)
	reply, err := ReplyOrTimeout(ch, WaitForReply)
	if err != nil {
		return fmt.Errorf("mpv.SendCommand: '%s': %s", name, err)
	}
	if reply.Error != "success" {
		return fmt.Errorf("mpv.SendCommand: '%s': %s", name, reply.Error)
	}

	return nil
}


// Ignore runs 'ignore' command
func (c *Client) Ignore(params ...interface{}) error {
	return c.SendCommand("ignore", params...)
}

// Seek runs 'seek' command
func (c *Client) Seek(params ...interface{}) error {
	return c.SendCommand("seek", params...)
}

// RevertSeek runs 'revert-seek' command
func (c *Client) RevertSeek(params ...interface{}) error {
	return c.SendCommand("revert-seek", params...)
}

// FrameStep runs 'frame-step' command
func (c *Client) FrameStep(params ...interface{}) error {
	return c.SendCommand("frame-step", params...)
}

// FrameBackStep runs 'frame-back-step' command
func (c *Client) FrameBackStep(params ...interface{}) error {
	return c.SendCommand("frame-back-step", params...)
}

// Set runs 'set' command
func (c *Client) Set(params ...interface{}) error {
	return c.SendCommand("set", params...)
}

// Add runs 'add' command
func (c *Client) Add(params ...interface{}) error {
	return c.SendCommand("add", params...)
}

// Cycle runs 'cycle' command
func (c *Client) Cycle(params ...interface{}) error {
	return c.SendCommand("cycle", params...)
}

// Multiply runs 'multiply' command
func (c *Client) Multiply(params ...interface{}) error {
	return c.SendCommand("multiply", params...)
}

// Screenshot runs 'screenshot' command
func (c *Client) Screenshot(params ...interface{}) error {
	return c.SendCommand("screenshot", params...)
}

// ScreenshotToFile runs 'screenshot-to-file' command
func (c *Client) ScreenshotToFile(params ...interface{}) error {
	return c.SendCommand("screenshot-to-file", params...)
}

// PlaylistNext runs 'playlist-next' command
func (c *Client) PlaylistNext(params ...interface{}) error {
	return c.SendCommand("playlist-next", params...)
}

// PlaylistPrev runs 'playlist-prev' command
func (c *Client) PlaylistPrev(params ...interface{}) error {
	return c.SendCommand("playlist-prev", params...)
}

// Loadfile runs 'loadfile' command
func (c *Client) Loadfile(params ...interface{}) error {
	return c.SendCommand("loadfile", params...)
}

// Loadlist runs 'loadlist' command
func (c *Client) Loadlist(params ...interface{}) error {
	return c.SendCommand("loadlist", params...)
}

// PlaylistClear runs 'playlist-clear' command
func (c *Client) PlaylistClear(params ...interface{}) error {
	return c.SendCommand("playlist-clear", params...)
}

// PlaylistRemove runs 'playlist-remove' command
func (c *Client) PlaylistRemove(params ...interface{}) error {
	return c.SendCommand("playlist-remove", params...)
}

// PlaylistMove runs 'playlist-move' command
func (c *Client) PlaylistMove(params ...interface{}) error {
	return c.SendCommand("playlist-move", params...)
}

// PlaylistShuffle runs 'playlist-shuffle' command
func (c *Client) PlaylistShuffle(params ...interface{}) error {
	return c.SendCommand("playlist-shuffle", params...)
}

// Run runs 'run' command
func (c *Client) Run(params ...interface{}) error {
	return c.SendCommand("run", params...)
}

// Quit runs 'quit' command
func (c *Client) Quit(params ...interface{}) error {
	return c.SendCommand("quit", params...)
}

// QuitWatchLater runs 'quit-watch-later' command
func (c *Client) QuitWatchLater(params ...interface{}) error {
	return c.SendCommand("quit-watch-later", params...)
}

// SubAdd runs 'sub-add' command
func (c *Client) SubAdd(params ...interface{}) error {
	return c.SendCommand("sub-add", params...)
}

// SubRemove runs 'sub-remove' command
func (c *Client) SubRemove(params ...interface{}) error {
	return c.SendCommand("sub-remove", params...)
}

// SubReload runs 'sub-reload' command
func (c *Client) SubReload(params ...interface{}) error {
	return c.SendCommand("sub-reload", params...)
}

// SubStep runs 'sub-step' command
func (c *Client) SubStep(params ...interface{}) error {
	return c.SendCommand("sub-step", params...)
}

// SubSeek runs 'sub-seek' command
func (c *Client) SubSeek(params ...interface{}) error {
	return c.SendCommand("sub-seek", params...)
}

// PrintText runs 'print-text' command
func (c *Client) PrintText(params ...interface{}) error {
	return c.SendCommand("print-text", params...)
}

// ShowText runs 'show-text' command
func (c *Client) ShowText(params ...interface{}) error {
	return c.SendCommand("show-text", params...)
}

// ExpandText runs 'expand-text' command
func (c *Client) ExpandText(params ...interface{}) error {
	return c.SendCommand("expand-text", params...)
}

// ShowProgress runs 'show-progress' command
func (c *Client) ShowProgress(params ...interface{}) error {
	return c.SendCommand("show-progress", params...)
}

// WriteWatchLaterConfig runs 'write-watch-later-config' command
func (c *Client) WriteWatchLaterConfig(params ...interface{}) error {
	return c.SendCommand("write-watch-later-config", params...)
}

// Stop runs 'stop' command
func (c *Client) Stop(params ...interface{}) error {
	return c.SendCommand("stop", params...)
}

// Mouse runs 'mouse' command
func (c *Client) Mouse(params ...interface{}) error {
	return c.SendCommand("mouse", params...)
}

// Keypress runs 'keypress' command
func (c *Client) Keypress(params ...interface{}) error {
	return c.SendCommand("keypress", params...)
}

// Keydown runs 'keydown' command
func (c *Client) Keydown(params ...interface{}) error {
	return c.SendCommand("keydown", params...)
}

// Keyup runs 'keyup' command
func (c *Client) Keyup(params ...interface{}) error {
	return c.SendCommand("keyup", params...)
}

// AudioAdd runs 'audio-add' command
func (c *Client) AudioAdd(params ...interface{}) error {
	return c.SendCommand("audio-add", params...)
}

// AudioRemove runs 'audio-remove' command
func (c *Client) AudioRemove(params ...interface{}) error {
	return c.SendCommand("audio-remove", params...)
}

// AudioReload runs 'audio-reload' command
func (c *Client) AudioReload(params ...interface{}) error {
	return c.SendCommand("audio-reload", params...)
}

// RescanExternalFiles runs 'rescan-external-files' command
func (c *Client) RescanExternalFiles(params ...interface{}) error {
	return c.SendCommand("rescan-external-files", params...)
}

// Af runs 'af' command
func (c *Client) Af(params ...interface{}) error {
	return c.SendCommand("af", params...)
}

// Vf runs 'vf' command
func (c *Client) Vf(params ...interface{}) error {
	return c.SendCommand("vf", params...)
}

// CycleValues runs 'cycle-values' command
func (c *Client) CycleValues(params ...interface{}) error {
	return c.SendCommand("cycle-values", params...)
}

// EnableSection runs 'enable-section' command
func (c *Client) EnableSection(params ...interface{}) error {
	return c.SendCommand("enable-section", params...)
}

// DisableSection runs 'disable-section' command
func (c *Client) DisableSection(params ...interface{}) error {
	return c.SendCommand("disable-section", params...)
}

// DefineSection runs 'define-section' command
func (c *Client) DefineSection(params ...interface{}) error {
	return c.SendCommand("define-section", params...)
}

// OverlayAdd runs 'overlay-add' command
func (c *Client) OverlayAdd(params ...interface{}) error {
	return c.SendCommand("overlay-add", params...)
}

// OverlayRemove runs 'overlay-remove' command
func (c *Client) OverlayRemove(params ...interface{}) error {
	return c.SendCommand("overlay-remove", params...)
}

// ScriptMessage runs 'script-message' command
func (c *Client) ScriptMessage(params ...interface{}) error {
	return c.SendCommand("script-message", params...)
}

// ScriptMessageTo runs 'script-message-to' command
func (c *Client) ScriptMessageTo(params ...interface{}) error {
	return c.SendCommand("script-message-to", params...)
}

// ScriptBinding runs 'script-binding' command
func (c *Client) ScriptBinding(params ...interface{}) error {
	return c.SendCommand("script-binding", params...)
}

// AbLoop runs 'ab-loop' command
func (c *Client) AbLoop(params ...interface{}) error {
	return c.SendCommand("ab-loop", params...)
}

// DropBuffers runs 'drop-buffers' command
func (c *Client) DropBuffers(params ...interface{}) error {
	return c.SendCommand("drop-buffers", params...)
}

// ScreenshotRaw runs 'screenshot-raw' command
func (c *Client) ScreenshotRaw(params ...interface{}) error {
	return c.SendCommand("screenshot-raw", params...)
}

// VfCommand runs 'vf-command' command
func (c *Client) VfCommand(params ...interface{}) error {
	return c.SendCommand("vf-command", params...)
}

// AfCommand runs 'af-command' command
func (c *Client) AfCommand(params ...interface{}) error {
	return c.SendCommand("af-command", params...)
}

// ApplyProfile runs 'apply-profile' command
func (c *Client) ApplyProfile(params ...interface{}) error {
	return c.SendCommand("apply-profile", params...)
}

// LoadScript runs 'load-script' command
func (c *Client) LoadScript(params ...interface{}) error {
	return c.SendCommand("load-script", params...)
}

// ChangeList runs 'change-list' command
func (c *Client) ChangeList(params ...interface{}) error {
	return c.SendCommand("change-list", params...)
}

